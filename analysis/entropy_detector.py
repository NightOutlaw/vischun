import numpy as np
from scipy.stats import entropy

class EntropyDetector:
    """
    –í–∏—è–≤–ª—è—î —Å–∏–≥–Ω–∞–ª–∏ –∑ —Ä–∏—Ç–º—ñ—á–Ω–æ—é –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é –∞–±–æ –∑–Ω–∏–∂–µ–Ω–Ω—è–º –µ–Ω—Ç—Ä–æ–ø—ñ—ó,
    —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω–∏–º –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ–≥–æ (–≤—ñ–¥–µ–æ) –ø–æ—Ç–æ–∫—É.
    """

    def __init__(self, bins=64, entropy_thresh=3.5):
        """
        Parameters:
            bins: –∫—ñ–ª—å–∫—ñ—Å—Ç—å –±—ñ–Ω—ñ–≤ —É –≥—ñ—Å—Ç–æ–≥—Ä–∞–º—ñ –∞–º–ø–ª—ñ—Ç—É–¥
            entropy_thresh: –ø–æ—Ä—ñ–≥ –µ–Ω—Ç—Ä–æ–ø—ñ—ó ‚Äî —è–∫—â–æ –Ω–∏–∂—á–µ ‚Üí —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π —Å–∏–≥–Ω–∞–ª
        """
        self.bins = bins
        self.entropy_thresh = entropy_thresh

    def analyze(self, iq_array: np.ndarray) -> bool:
        """
        –ê–Ω–∞–ª—ñ–∑—É—î –µ–Ω—Ç—Ä–æ–ø—ñ—é –∞–º–ø–ª—ñ—Ç—É–¥–Ω–æ–≥–æ —Ä–æ–∑–ø–æ–¥—ñ–ª—É.

        Returns:
            bool ‚Äî True, —è–∫—â–æ —Å–∏–≥–Ω–∞–ª –º–∞—î –∑–Ω–∏–∂–µ–Ω—É –µ–Ω—Ç—Ä–æ–ø—ñ—é
        """
        if len(iq_array) == 0:
            return False

        magnitudes = np.abs(iq_array)

        # –ü–æ–±—É–¥–æ–≤–∞ –≥—ñ—Å—Ç–æ–≥—Ä–∞–º–∏
        hist, bin_edges = np.histogram(magnitudes, bins=self.bins, density=True)
        hist = hist + 1e-12  # —É–Ω–∏–∫–Ω–µ–Ω–Ω—è log(0)

        # –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –µ–Ω—Ç—Ä–æ–ø—ñ—ó
        h = entropy(hist, base=2)

        if h < self.entropy_thresh:
            print(f"[üìâEntropy] –ï–Ω—Ç—Ä–æ–ø—ñ—è —Å–∏–≥–Ω–∞–ª—É –∑–Ω–∏–∂–µ–Ω–∞: H = {h:.2f} –±—ñ—Ç ‚Äî –º–æ–∂–ª–∏–≤–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π —Å–∏–≥–Ω–∞–ª")
            return True
        return False